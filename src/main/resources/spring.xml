<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages"/>
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>
    <bean id="mappingService" class="game.core.mapping.MappingService"/>
    <context:property-placeholder file-encoding="utf-8" location="classpath:config.properties"/>

    <context:component-scan base-package="game">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="javax.websocket.server.ServerEndpoint"/>
    </context:component-scan>

    <import resource="spring-redis.xml"/>
    <import resource="spring-persistence.xml"/>
    <import resource="spring-upload.xml"/>
    <import resource="spring-freemarker.xml"/>

    <bean id="idFactory" class="game.core.common.id.IdFactory" init-method="initSequence">
        <property name="prefix" value="${idFactory.prefix}"/>
        <property name="suffixLength" value="${idFactory.suffixLength}"/>
        <property name="sequenceAppService" ref="sequenceAppService"/>
    </bean>

    <bean id="gameServer" class="game.core.pay.GameServer">
        <property name="url" value="${gameServer.url}"/>
        <property name="key" value="${gameServer.key}"/>
    </bean>

    <!-- 数据分析定时下发工作类 -->
    <bean id="quartzJob" class="game.interfaces.user.web.UserController"/>
    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="jobTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob"/>
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="setLastDayRebate"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 定义触发时间 -->
    <bean id="jobTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobTask"/>
        <!-- cron表达式 -->
        <property name="cronExpression" value="0 0 0 * * ?"/>
    </bean>
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
    <bean id="taskManager" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="jobTaskTrigger"/>
            </list>
        </property>
    </bean>

</beans>